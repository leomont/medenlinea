@using Medinlinea.Models
@{
    ViewBag.Title = "AgregarConsultorio";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    List<Especialistas> listado = (ViewBag.listado != null) ? (List<Especialistas>)ViewBag.listado : new List<Especialistas>();
    List<Ciudades> listado2 = (ViewBag.listado2 != null) ? (List<Ciudades>)ViewBag.listado2 : new List<Ciudades>();
}
<link href="~/Style/estilos.css" rel="stylesheet" />
<link href="~/lib/bootstrap-rating/css/star-rating.css" rel="stylesheet" />
<link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
<link href="~/lib/bootstrap-rating/css/star-rating.css" rel="stylesheet" />

<div class="container">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-10 col-lg-offset-1">

            <form id="form-consultorio" enctype="multipart/form-data" action="~/Direccion/Create" method="post">
                @Html.AntiForgeryToken()
                <h2>Ingresar Consultorio</h2>
                <br>
                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-3 control-label">Especialista</label>
                    <div class="col-sm-9">
                        <select name="IdEspecialista" id="IdEspecialista" class="form-control">
                            <option value="">Seleccione Especialidad</option>
                            @{
                                foreach (Especialistas obj in listado)
                                {
                                    <option value="@obj.IdEspecialista">@obj.NombreEsp @obj.ApellidoEsp</option>
                                }
                            }
                        </select>
                        <br>
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-3 control-label">Ciudad</label>
                    <div class="col-sm-9">
                        <select name="IdCiudad" id="IdCiudad" class="form-control">
                            <option value="">Seleccione Ciudad</option>
                            @{
                                foreach (Ciudades obj in listado2)
                                {
                                    <option value="@obj.IdCiudad">@obj.NombreCiudad</option>
                                }
                            }
                        </select>
                        <br>
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-3 control-label">Calle</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" name="Calle" id="Calle" placeholder="Ingresa tu nombre">
                        <br>
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-3 control-label">Telefono Fijo</label>
                    <div class="col-sm-9">
                        <input type="tel" class="form-control" name="TelefonoFijo" id="TelefonoFijo" placeholder="Ingresa tu celular">
                        <br>
                    </div>
                </div>

                <div class="form-group">
                    <legend class="margen">Ubicacio&acute;n</legend>
                    <div class="col-sm-offset-1 col-sm-10">
                        <div class="map-content">
                            <div id="panel">
                                <input id="address_map" type="text" class="input-lg" value="Bogota D.C , Colombia">
                                <input type="button" class="btn btn-primary" value="Geolocalizar" onclick="codeAddress()">
                            </div>
                            <div id="map-canvas"></div>
                            <input type="hidden" name="latitud" id="latitud" />
                            <input type="hidden" name="longitud" id="longitud" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <p class="text-center">
                        <button type="button" name="Nuevo" onclick="validar_enviar();" class="btn btn-primary btn-sm">Guardar</button>
                    </p>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>


<script type="text/javascript">
    /*---------------variables para inicializar y actualizar el mapa de registro----------*/
    /*Posicionar marker de mapa en el municipio seleccionado*/

    $(document).ready(function () {
        initialize();
    });
    var geocoder = new google.maps.Geocoder();
    var map = null;
    var marker;
    function initialize() {
        geocoder = new google.maps.Geocoder();
        var mapOptions = {
            zoom: 11
        }
        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        marker = new google.maps.Marker({
            map: map,
            draggable: true
        });
        codeAddress();
        google.maps.event.addListener(marker, 'dragstart', function () {
            //updateMarkerAddress('Ubicando');
        });

        google.maps.event.addListener(marker, 'drag', function () {
            //updateMarkerStatus('Ubicando');
            //updateMarkerPosition(marker.getPosition());
        });

        google.maps.event.addListener(marker, 'dragend', function () {
            //updateMarkerStatus('Ubicado');
            geocodePosition(marker.getPosition());
        });
    }

    function updateMarkerPosition(latLng) {
        document.getElementById('latitud').value = [latLng.lat()]
        document.getElementById('longitud').value = [latLng.lng()]
    }

    function updateMarkerAddress(str) {
        document.getElementById('address_map').value = str;
    }

    function geocodePosition(pos) {
        geocoder.geocode({
            latLng: pos
        }, function (responses) {
            if (responses && responses.length > 0) {
                updateMarkerAddress(responses[0].formatted_address);
            } else {
                updateMarkerAddress('No se puede encontrar la dirección.');
            }
        });
    }

    function codeAddress() {
        var address_map = document.getElementById('address_map');
        if (address_map.value == '') {
            address_map.value = "Bogota D.C , Colombia";
        }
        var address = address_map.value;
        if (map != null) {
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    marker.setPosition(results[0].geometry.location);
                    updateMarkerPosition(results[0].geometry.location);
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }
    }

    //validacion de campos
    function validar_enviar () {
        var form = $("#form-consultorio");
        form.bootstrapValidator({
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok-circle',
                invalid: 'glyphicon glyphicon-ban-circle',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                Calle: {
                    validators: {
                        notEmpty: {
                            message: "La dirección es requerido"
                        }
                    }
                },
                IdEspecialista: {
                    validators: {
                        callback: {
                            message: 'El especialista es requerido',
                            callback: function (value, validator, $field) {
                                var options = validator.getFieldElements('IdEspecialista').val();
                                return (options != null && options.length > 0);
                            }
                        }
                    }
                },
                IdCiudad: {
                    validators: {
                        callback: {
                            message: 'La ciudad es requerida',
                            callback: function (value, validator, $field) {
                                var options = validator.getFieldElements('IdCiudad').val();
                                return (options != null && options.length > 0);
                            }
                        }
                    }
                },
                TelefonoFijo: {
                    validators: {
                        notEmpty: {
                            message: "El telefono es requerido"
                        }
                    }
                }
            }
        });

        form.bootstrapValidator('validate');
        var bootstrapValidator = form.data('bootstrapValidator');
        if (bootstrapValidator.isValid()) {
            showLoading();
            formulario = document.getElementById("form-consultorio");
            formulario.submit();
        }
    }
</script>
